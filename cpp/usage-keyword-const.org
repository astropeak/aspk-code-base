* keyword const
** Items
*** const 修饰函数体时
    表示这个函数的this指针是const的。因此，
    1. 函数体中不能修改类成员变量
    2. 不能调用非const的成员函数
       调用时错误信息：
       #+begin_src org
       tmp1.cpp:28:28: error: passing ‘const person’ as ‘this’ argument of ‘void person::DoAction(behavior)’ discards qualifiers [-fpermissive]
                    DoAction(eSmile);
       
       #+end_src
    3. this pointer is as if it was declared as ~const C* const this~;
*** meaning of const in pointer declaration
    | declaration      | meaning              |
    |------------------+----------------------|
    | const C* p       | content is const     |
    | C const * p      | same as the above    |
    | C* const p       | the pointer is const |
    | const C* const p | both are const       |
    
*** Class A的const对象作为Class B的const 成员
    则在class B中， 只能通过class A的这个对象调用其const的成员函数。这是一个很大的限制，因此最好声明为非const的，这进一步要求class B的构造函数的输入参数（用于初始化这个成员变量）不能是const, 因为如果它是const，则这个成员变量需要声明为const.
    
    
